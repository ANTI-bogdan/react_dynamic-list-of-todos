{"version":3,"sources":["types/FilteredOption.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Options","TodoList","todos","selected","selectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filter","setTitle","setFilter","value","onChange","event","choosedField","target","all","active","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setTodo","useState","user","setUser","useEffect","userId","undefined","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","setField","loading","setLoading","filteredTodos","filteredBy","getFilteredTodos","searchedTodo","toLowerCase","includes","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd8ad266.chunk.js","sourcesContent":["export enum Options {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selected: Todo | undefined\n  selectTodo: React.Dispatch<React.SetStateAction<Todo | undefined>>\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selected,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={selected?.id === todo.id\n                        ? 'far fa-eye-slash'\n                        : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n          );\n        })}\n\n      </tbody>\n    </table>\n  );\n};\n","import { Options } from '../../types/FilteredOption';\n\ntype Props = {\n  filter: Options\n  title: string\n  setTitle: React.Dispatch<React.SetStateAction<string>>\n  setFilter: React.Dispatch<React.SetStateAction<Options>>\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  title,\n  setTitle,\n  setFilter,\n}) => {\n  const onDelete = () => {\n    setTitle('');\n  };\n\n  const onChoose = (choosedField: Options) => {\n    setFilter(Options[choosedField]);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => onChoose(event.target.value as Options)}\n          >\n            <option\n              value={Options.all}\n            >\n              All\n            </option>\n            <option\n              value={Options.active}\n            >\n              Active\n            </option>\n            <option\n              value={Options.completed}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!title.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onDelete}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n  setTodo: React.Dispatch<React.SetStateAction<Todo | undefined>>\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setTodo }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser);\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodo(undefined)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Options } from './types/FilteredOption';\n\nfunction getFilteredTodos(todos: Todo[], filteredBy: Options) {\n  switch (filteredBy) {\n    case Options.all:\n      return todos;\n    case Options.active:\n      return todos.filter((todo) => todo.completed === false);\n    case Options.completed:\n      return todos.filter((todo) => todo.completed === true);\n\n    default:\n      return todos;\n  }\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | undefined>();\n  const [filter, setField] = useState(Options.all);\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState('');\n  const filteredTodos = getFilteredTodos(todos, filter);\n  const searchedTodo = filteredTodos.filter((todo) => (\n    todo.title.toLowerCase().includes(title.toLowerCase())));\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                title={title}\n                setTitle={setTitle}\n                setFilter={setField}\n              />\n            </div>\n\n            <div className=\"block\">\n\n              {!loading && (\n                <TodoList\n                  todos={searchedTodo}\n                  selected={selectedTodo}\n                  selectTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n            {loading && <Loader />}\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}